#+TITLE:Debugging Cakelisp
Cakelisp doesn't really have an interpreter. Cakelisp always generates C/C++ code to do meaningful work. This means the Cakelisp transpiler, macros, generators, and of course final code output can be debugged using a regular C/C++ debugger like GDB, LLDB, Or Visual Studio Debugger.

* Verbosity
I've sprinkled ~bool verbose~ flags throughout the code. Eventually I will add a proper command-line option for changing verbosity (TODO).
* GDB
This command should be run in order to tell GDB where the ~.so~ files you want to debug are located:

#+BEGIN_SRC sh
set solib-search-path ~/Development/code/repositories/cakelisp/
#+END_SRC

By setting a breakpoint in already generated C++ code, you will then hit the breakpoint once the code is regenerated and loaded at transpiler runtime (a.k.a. compile-time code execution).
